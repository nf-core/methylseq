name: nf-core AWS full size tests
# This workflow is triggered on PRs opened against the main/master branch.
# It can be additionally triggered manually with GitHub actions workflow dispatch button.
# It runs the -profile 'test_full' on AWS batch

on:
  workflow_dispatch:
  pull_request_review:
    types: [submitted]
  release:
    types: [published]

jobs:
  run-platform:
    name: Run AWS full tests (${{ matrix.aligner }} - ${{ matrix.compute_env }})
    # run only if the PR is approved by at least 2 reviewers and against the master/main branch or manually triggered
    if: github.repository == 'nf-core/methylseq' && github.event.review.state == 'approved' && (github.event.pull_request.base.ref == 'master' || github.event.pull_request.base.ref == 'main') || github.event_name == 'workflow_dispatch' || github.event_name == 'release'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - aligner: "bismark"
            profile: "test_full"
            compute_env: "CPU"
          - aligner: "bismark_hisat"
            profile: "test_full"
            compute_env: "CPU"
          - aligner: "bwameth"
            profile: "test_full"
            compute_env: "CPU"
          - aligner: "bwameth"
            profile: "test_full,gpu"
            compute_env: "GPU"
          - aligner: "bismark"
            profile: "test_full"
            compute_env: "ARM"
          - aligner: "bismark_hisat"
            profile: "test_full"
            compute_env: "ARM"
          - aligner: "bwameth"
            profile: "test_full"
            compute_env: "ARM"
    steps:
      - name: Set revision variable
        id: revision
        run: |
          echo "revision=${{ (github.event_name == 'workflow_dispatch' || github.event_name == 'release') && github.sha || 'dev' }}" >> "$GITHUB_OUTPUT"

      - name: Validate parameters
        run: |
          echo "Workspace ID: ${{ vars.TOWER_WORKSPACE_ID }}"
          echo "Compute Env: ${{ matrix.compute_env == 'CPU' && vars.TOWER_COMPUTE_ENV_CPU || matrix.compute_env == 'GPU' && vars.TOWER_COMPUTE_ENV_GPU || vars.TOWER_COMPUTE_ENV_ARM }}"
          echo "Access token present: ${{ secrets.TOWER_ACCESS_TOKEN != '' }}"

      - name: Launch workflow via Seqera Platform
        uses: seqeralabs/action-tower-launch@refactor-javascript
        with:
          workspace_id: ${{ vars.TOWER_WORKSPACE_ID }}
          access_token: ${{ secrets.TOWER_ACCESS_TOKEN }}
          compute_env: ${{ matrix.compute_env == 'CPU' && vars.TOWER_COMPUTE_ENV_CPU || matrix.compute_env == 'GPU' && vars.TOWER_COMPUTE_ENV_GPU || vars.TOWER_COMPUTE_ENV_ARM }}
          revision: ${{ steps.revision.outputs.revision }}
          workdir: s3://nf-core-awsmegatests/work/methylseq/work-${{ steps.revision.outputs.revision }}-${{ matrix.aligner }}-${{ matrix.compute_env }}
          labels: ${{ matrix.compute_env == 'GPU' && 'full_test,gpu' || matrix.compute_env == 'ARM' && 'full_test,arm,wave' || 'full_test' }}
          parameters: |
            {
              "hook_url": "${{ secrets.MEGATESTS_ALERTS_SLACK_HOOK_URL }}",
              "outdir": "s3://nf-core-awsmegatests/methylseq/results-${{ steps.revision.outputs.revision }}-${{ matrix.aligner }}-${{ matrix.compute_env }}",
              "aligner": "${{ matrix.aligner }}"
            }
          profiles: ${{ matrix.profile }}

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: Seqera Platform debug log file (${{ matrix.aligner }}-${{ matrix.compute_env }})
          path: |
            seqera_platform_action_*.log
            seqera_platform_action_*.json
