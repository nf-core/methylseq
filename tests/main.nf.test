import com.askimed.nf.test.util.FileUtil;

nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "methylseq"

    test("METHYLSEQ Workflow main.nf") {

        when {
            params {
                save_reference = true
                outdir = "$outputDir"
            }
        }

        then {
            // Assert Workflow Success
            assert workflow.success

            // Bismark Methylation Calls Splitting Report
            assert snapshot(path("$outputDir/bismark/methylation_calls/splitting_report/Ecoli_10K_methylated_1_val_1_bismark_bt2_pe.deduplicated_splitting_report.txt"),
                            path("$outputDir/bismark/methylation_calls/splitting_report/SRR389222_sub1_trimmed_bismark_bt2.deduplicated_splitting_report.txt"),
                            path("$outputDir/bismark/methylation_calls/splitting_report/SRR389222_sub2_trimmed_bismark_bt2.deduplicated_splitting_report.txt")).match("splitting_report")

            // Bismark Summary Report
            assert snapshot(path("$outputDir/bismark/summary/bismark_summary_report.txt")).match("summary")

            // Reference Genome
            assert snapshot(path("$outputDir/bismark/reference_genome/BismarkIndex/genome.fa")).match("reference_genome")

            // Qualimap Report
            assert snapshot(path("$outputDir/qualimap/Ecoli_10K_methylated/genome_results.txt"),
                            path("$outputDir/qualimap/SRR389222_sub1/genome_results.txt"),
                            path("$outputDir/qualimap/SRR389222_sub2/genome_results.txt")).match("qualimap")

            // Software Versions
            assert snapshot(path("$outputDir/pipeline_info/software_versions.yml")).match("software_versions")
        }
    }

}

