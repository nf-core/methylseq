sudo: required
language: python
jdk: openjdk8
services: docker
python: '3.6'
cache: pip
matrix:
  fast_finish: true

before_install:
  # PRs to master are only ok if coming from dev branch
  - '[ $TRAVIS_PULL_REQUEST = "false" ] || [ $TRAVIS_BRANCH != "master" ] || ([ $TRAVIS_PULL_REQUEST_SLUG = $TRAVIS_REPO_SLUG ] && ([ $TRAVIS_PULL_REQUEST_BRANCH = "dev" ] || [ $TRAVIS_PULL_REQUEST_BRANCH = "patch" ]))'
  # Pull the docker image first so the test doesn't wait for this
  - docker pull nfcore/methylseq:dev
  # Fake the tag locally so that the pipeline runs properly
  # Looks weird when this is :dev to :dev, but makes sense when testing code for a release (:dev to :1.0.1)
  - docker tag nfcore/methylseq:dev nfcore/methylseq:dev

install:
  # Install Nextflow
  - mkdir /tmp/nextflow && cd /tmp/nextflow
  - wget -qO- get.nextflow.io | bash
  - sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
  # Install nf-core/tools
  - pip install --upgrade pip
  - pip install nf-core
  # Reset
  - mkdir ${TRAVIS_BUILD_DIR}/tests && cd ${TRAVIS_BUILD_DIR}/tests
  # Install markdownlint-cli
  - sudo apt-get install npm && npm install -g markdownlint-cli

env:
  global:
    # https://tower.nf/ with email nf-core@mailinator.com
    # Tower login mailbox: https://www.mailinator.com/v3/index.jsp?zone=public&query=nf-core
    - TOWER_ACCESS_TOKEN="1c1f493bc2703472d6f1b9f6fb9e9d117abab7b1"
    - JOBNAME="methylseq-${TRAVIS_EVENT_TYPE}-${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT:0:6}-"
    # Refs built by initial jobs
    - BISMARK_R="--bismark_index ${TRAVIS_BUILD_DIR}/tests/results/reference_genome/BismarkIndex/"
    - BWA_R="--bwa_meth_index ${TRAVIS_BUILD_DIR}/tests/results/reference_genome/genome.fa"
    # Disable ansi log as doesn't work well on Travis
    - NXF_ANSI_LOG=0
    # Convenience var to hold common portion of nextflow run command
    - NFC="nextflow run ${TRAVIS_BUILD_DIR} -with-tower -profile test,docker --aligner"

  jobs:
    - ALN="bismark"         AREF=$BISMARK_R   NXF_VER='19.10.0'
    - ALN="bismark"         AREF=$BISMARK_R
    - ALN="bismark_hisat"   AREF=$BISMARK_R   NXF_VER='19.10.0'
    - ALN="bismark_hisat"   AREF=$BISMARK_R
    - ALN="bwameth"         AREF=$BWA_R       NXF_VER='19.10.0'
    - ALN="bwameth"         AREF=$BWA_R

script:
  # Lint the pipeline code
  - nf-core lint ${TRAVIS_BUILD_DIR}
  # Lint the documentation
  - markdownlint ${TRAVIS_BUILD_DIR} -c ${TRAVIS_BUILD_DIR}/.github/markdownlint.yml
  # Run, build reference genome
  - $NFC ${ALN} -name "${JOBNAME}${ALN}-buildref" --save_reference
  # Basic run with supplied reference
  - $NFC ${ALN} -name "${JOBNAME}${ALN}-withref" $AREF
  # Run, RRBS mode with no trimming
  - $NFC ${ALN} -name "${JOBNAME}${ALN}-skiptrim-rrbs" --skip_trimming --rrbs
